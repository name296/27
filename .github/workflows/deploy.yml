name: 🚀 Deploy to GitHub Pages

on:
  # main 브랜치에 push될 때 실행
  push:
    branches: [ main ]
  
  # 수동으로 워크플로우 실행 가능
  workflow_dispatch:

# GitHub Pages 배포를 위한 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# 동시 배포 방지
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 빌드 작업
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📂 Checkout
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Pages
      uses: actions/configure-pages@v4
      
    - name: 📋 List files
      run: |
        echo "📁 프로젝트 파일 목록:"
        ls -la
        
    - name: ✅ Validate HTML
      run: |
        echo "🔍 HTML 파일 검증 중..."
        if [ -f "index.html" ]; then
          echo "✅ index.html 파일 존재함"
        else
          echo "❌ index.html 파일이 없습니다"
          exit 1
        fi
        
    - name: ✅ Validate CSS
      run: |
        echo "🎨 CSS 파일 검증 중..."
        if [ -f "style.css" ]; then
          echo "✅ style.css 파일 존재함"
        else
          echo "❌ style.css 파일이 없습니다"
          exit 1
        fi
        
    - name: ✅ Validate JavaScript
      run: |
        echo "⚡ JavaScript 파일 검증 중..."
        if [ -f "script.js" ]; then
          echo "✅ script.js 파일 존재함"
        else
          echo "❌ script.js 파일이 없습니다"
          exit 1
        fi
        
    - name: 📦 Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'

  # GitHub Pages 배포 작업
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: 🎉 Deployment Success
      run: |
        echo "🎉 배포 완료!"
        echo "📍 사이트 URL: ${{ steps.deployment.outputs.page_url }}"
